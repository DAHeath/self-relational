DIGEST 29668618310f0ebd5f2adc5813d941fc
FProof
R15:22 Coq.Arith.PeanoNat <> <> lib
R40:53 Coq.Lists.List <> <> lib
ind 67:71 <> aoper
constr 78:81 <> oadd
constr 93:96 <> osub
constr 108:111 <> omul
R85:89 Proof <> aoper ind
R100:104 Proof <> aoper ind
R115:119 Proof <> aoper ind
ind 133:137 <> aexpr
constr 144:146 <> aop
constr 185:188 <> alit
constr 207:210 <> avar
R155:158 Coq.Init.Logic <> :type_scope:x_'->'_x not
R164:167 Coq.Init.Logic <> :type_scope:x_'->'_x not
R173:176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R177:181 Proof <> aexpr ind
R168:172 Proof <> aexpr ind
R159:163 Proof <> aexpr ind
R150:154 Proof <> aoper ind
R195:198 Coq.Init.Logic <> :type_scope:x_'->'_x not
R199:203 Proof <> aexpr ind
R192:194 Coq.Init.Datatypes <> nat ind
R217:220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R221:225 Proof <> aexpr ind
R214:216 Coq.Init.Datatypes <> nat ind
ind 239:243 <> boper
constr 250:252 <> oeq
constr 264:266 <> olt
constr 278:280 <> ole
constr 292:294 <> ogt
constr 306:308 <> oge
R256:260 Proof <> boper ind
R270:274 Proof <> boper ind
R284:288 Proof <> boper ind
R298:302 Proof <> boper ind
R312:316 Proof <> boper ind
ind 330:334 <> bcomb
constr 341:344 <> oand
constr 356:358 <> oor
constr 370:374 <> oimpl
R348:352 Proof <> bcomb ind
R362:366 Proof <> bcomb ind
R378:382 Proof <> bcomb ind
ind 396:400 <> bexpr
constr 407:409 <> oop
constr 448:450 <> bco
constr 489:492 <> bnot
R418:421 Coq.Init.Logic <> :type_scope:x_'->'_x not
R427:430 Coq.Init.Logic <> :type_scope:x_'->'_x not
R436:439 Coq.Init.Logic <> :type_scope:x_'->'_x not
R440:444 Proof <> bexpr ind
R431:435 Proof <> aexpr ind
R422:426 Proof <> aexpr ind
R413:417 Proof <> boper ind
R459:462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R468:471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R477:480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R481:485 Proof <> bexpr ind
R472:476 Proof <> bexpr ind
R463:467 Proof <> bexpr ind
R454:458 Proof <> bcomb ind
R501:504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R505:509 Proof <> bexpr ind
R496:500 Proof <> bexpr ind
ind 523:525 <> com
constr 532:536 <> cskip
constr 546:552 <> cassign
constr 578:580 <> cif
constr 613:618 <> cwhile
constr 692:695 <> cseq
constr 719:723 <> cprod
R540:542 Proof <> com ind
R559:562 Coq.Init.Logic <> :type_scope:x_'->'_x not
R568:571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R572:574 Proof <> com ind
R563:567 Proof <> aexpr ind
R556:558 Coq.Init.Datatypes <> nat ind
R589:592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R596:599 Coq.Init.Logic <> :type_scope:x_'->'_x not
R603:606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R607:609 Proof <> com ind
R600:602 Proof <> com ind
R593:595 Proof <> com ind
R584:588 Proof <> bexpr ind
R625:628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R634:637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R641:644 Coq.Init.Logic <> :type_scope:x_'->'_x not
R645:647 Proof <> com ind
R638:640 Proof <> com ind
R629:633 Proof <> bexpr ind
R622:624 Coq.Init.Datatypes <> nat ind
R702:705 Coq.Init.Logic <> :type_scope:x_'->'_x not
R709:712 Coq.Init.Logic <> :type_scope:x_'->'_x not
R713:715 Proof <> com ind
R706:708 Proof <> com ind
R699:701 Proof <> com ind
R730:733 Coq.Init.Logic <> :type_scope:x_'->'_x not
R737:740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R741:743 Proof <> com ind
R734:736 Proof <> com ind
R727:729 Proof <> com ind
R772:778 Proof <> cassign constr
not 756:756 <> ::x_'::='_x
def 812:817 <> state'
R825:828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R829:831 Coq.Init.Datatypes <> nat ind
R822:824 Coq.Init.Datatypes <> nat ind
ind 845:849 <> state
constr 856:864 <> singleton
constr 886:894 <> composite
R874:877 Coq.Init.Logic <> :type_scope:x_'->'_x not
R878:882 Proof <> state ind
R868:873 Proof <> state' def
R903:906 Coq.Init.Logic <> :type_scope:x_'->'_x not
R912:915 Coq.Init.Logic <> :type_scope:x_'->'_x not
R916:920 Proof <> state ind
R907:911 Proof <> state ind
R898:902 Proof <> state ind
def 935:941 <> stempty
R945:950 Proof <> state' def
def 978:985 <> stupdate
R996:1001 Proof <> state' def
R1019:1022 Coq.Arith.PeanoNat <> :nat_scope:x_'=?'_x not
R1018:1018 Proof <> k var
R1023:1023 Proof <> x var
R1037:1038 Proof <> st var
R1040:1040 Proof <> k var
R1030:1030 Proof <> n var
def 1053:1061 <> stupdates
R1074:1079 Proof <> state' def
R1092:1093 Proof <> xs var
R1104:1106 Coq.Init.Datatypes <> nil constr
R1111:1112 Proof <> st var
R1119:1122 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1135:1136 Proof <> ns var
R1160:1162 Coq.Init.Datatypes <> nil constr
R1167:1168 Proof <> st var
R1188:1191 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R1198:1206 Proof <> stupdates def
R1215:1222 Proof <> stupdate def
R1228:1229 Proof <> st var
R1211:1212 Proof <> ns var
R1208:1209 Proof <> xs var
def 1268:1272 <> aeval
R1278:1283 Proof <> state' def
R1289:1293 Proof <> aexpr ind
R1298:1300 Coq.Init.Datatypes <> nat ind
R1313:1313 Proof <> e var
R1324:1326 Proof <> aop constr
R1373:1376 Proof <> oadd constr
R1392:1394 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1381:1385 Proof <> aeval def
R1387:1388 Proof <> st var
R1395:1399 Proof <> aeval def
R1401:1402 Proof <> st var
R1428:1431 Proof <> osub constr
R1447:1449 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R1436:1440 Proof <> aeval def
R1442:1443 Proof <> st var
R1450:1454 Proof <> aeval def
R1456:1457 Proof <> st var
R1483:1486 Proof <> omul constr
R1502:1504 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R1491:1495 Proof <> aeval def
R1497:1498 Proof <> st var
R1505:1509 Proof <> aeval def
R1511:1512 Proof <> st var
R1544:1547 Proof <> alit constr
R1560:1563 Proof <> avar constr
R1570:1571 Proof <> st var
def 1592:1596 <> beval
R1602:1607 Proof <> state' def
R1613:1617 Proof <> bexpr ind
R1622:1625 Coq.Init.Datatypes <> bool ind
R1638:1638 Proof <> e var
R1649:1651 Proof <> oop constr
R1698:1700 Proof <> oeq constr
R1716:1719 Coq.Arith.PeanoNat <> :nat_scope:x_'=?'_x not
R1705:1709 Proof <> aeval def
R1711:1712 Proof <> st var
R1720:1724 Proof <> aeval def
R1726:1727 Proof <> st var
R1753:1755 Proof <> olt constr
R1771:1774 Coq.Arith.PeanoNat <> :nat_scope:x_'<?'_x not
R1760:1764 Proof <> aeval def
R1766:1767 Proof <> st var
R1775:1779 Proof <> aeval def
R1781:1782 Proof <> st var
R1808:1810 Proof <> ole constr
R1826:1830 Coq.Arith.PeanoNat <> :nat_scope:x_'<=?'_x not
R1815:1819 Proof <> aeval def
R1821:1822 Proof <> st var
R1831:1835 Proof <> aeval def
R1837:1838 Proof <> st var
R1864:1866 Proof <> ogt constr
R1871:1874 Coq.Init.Datatypes <> negb def
R1888:1892 Coq.Arith.PeanoNat <> :nat_scope:x_'<=?'_x not
R1877:1881 Proof <> aeval def
R1883:1884 Proof <> st var
R1893:1897 Proof <> aeval def
R1899:1900 Proof <> st var
R1927:1929 Proof <> oge constr
R1934:1937 Coq.Init.Datatypes <> negb def
R1951:1954 Coq.Arith.PeanoNat <> :nat_scope:x_'<?'_x not
R1940:1944 Proof <> aeval def
R1946:1947 Proof <> st var
R1955:1959 Proof <> aeval def
R1961:1962 Proof <> st var
R1995:1997 Proof <> bco constr
R2044:2047 Proof <> oand constr
R2053:2056 Coq.Init.Datatypes <> andb def
R2074:2078 Proof <> beval def
R2080:2081 Proof <> st var
R2060:2064 Proof <> beval def
R2066:2067 Proof <> st var
R2108:2110 Proof <> oor constr
R2117:2119 Coq.Init.Datatypes <> orb def
R2138:2142 Proof <> beval def
R2144:2145 Proof <> st var
R2124:2128 Proof <> beval def
R2130:2131 Proof <> st var
R2172:2176 Proof <> oimpl constr
R2181:2185 Coq.Init.Datatypes <> implb def
R2202:2206 Proof <> beval def
R2208:2209 Proof <> st var
R2188:2192 Proof <> beval def
R2194:2195 Proof <> st var
R2242:2245 Proof <> bnot constr
R2253:2256 Coq.Init.Datatypes <> negb def
R2259:2263 Proof <> beval def
R2265:2266 Proof <> st var
ind 2290:2294 <> ceval
constr 2333:2337 <> ESkip
constr 2372:2378 <> EAssign
constr 2488:2494 <> EIfTrue
constr 2650:2657 <> EIfFalse
constr 2814:2823 <> EWhileTrue
constr 3048:3058 <> EWhileFalse
constr 3160:3163 <> ESeq
constr 3274:3278 <> EProd
R2301:2304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2310:2313 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2319:2322 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2314:2318 Proof <> state ind
R2305:2309 Proof <> state ind
R2298:2300 Proof <> com ind
R2352:2356 Proof <> ceval ind
R2367:2368 Proof <> st var
R2364:2365 Proof <> st var
R2358:2362 Proof <> cskip constr
R2417:2424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2425:2429 Proof <> ceval ind
R2457:2465 Proof <> singleton constr
R2468:2475 Proof <> stupdate def
R2481:2482 Proof <> st var
R2479:2479 Proof <> n var
R2477:2477 Proof <> x var
R2442:2450 Proof <> singleton constr
R2452:2453 Proof <> st var
R2433:2437 Proof <> ::x_'::='_x not
R2432:2432 Proof <> x var
R2438:2438 Proof <> e var
R2413:2415 Coq.Init.Logic <> :type_scope:x_'='_x not
R2403:2407 Proof <> aeval def
R2412:2412 Proof <> e var
R2409:2410 Proof <> st var
R2416:2416 Proof <> n var
R2542:2549 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2589:2596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2597:2601 Proof <> ceval ind
R2633:2641 Proof <> singleton constr
R2643:2645 Proof <> st' var
R2618:2626 Proof <> singleton constr
R2628:2629 Proof <> st var
R2604:2606 Proof <> cif constr
R2613:2614 Proof <> c2 var
R2610:2611 Proof <> c1 var
R2608:2608 Proof <> e var
R2550:2554 Proof <> ceval ind
R2575:2583 Proof <> singleton constr
R2585:2587 Proof <> st' var
R2560:2568 Proof <> singleton constr
R2570:2571 Proof <> st var
R2556:2557 Proof <> c1 var
R2535:2537 Coq.Init.Logic <> :type_scope:x_'='_x not
R2525:2529 Proof <> beval def
R2534:2534 Proof <> e var
R2531:2532 Proof <> st var
R2538:2541 Coq.Init.Datatypes <> true constr
R2706:2713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2753:2760 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2761:2765 Proof <> ceval ind
R2797:2805 Proof <> singleton constr
R2807:2809 Proof <> st' var
R2782:2790 Proof <> singleton constr
R2792:2793 Proof <> st var
R2768:2770 Proof <> cif constr
R2777:2778 Proof <> c2 var
R2774:2775 Proof <> c1 var
R2772:2772 Proof <> e var
R2714:2718 Proof <> ceval ind
R2739:2747 Proof <> singleton constr
R2749:2751 Proof <> st' var
R2724:2732 Proof <> singleton constr
R2734:2735 Proof <> st var
R2720:2721 Proof <> c2 var
R2698:2700 Coq.Init.Logic <> :type_scope:x_'='_x not
R2688:2692 Proof <> beval def
R2697:2697 Proof <> e var
R2694:2695 Proof <> st var
R2701:2705 Coq.Init.Datatypes <> false constr
R2874:2881 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2920:2927 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2981:2988 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2989:2993 Proof <> ceval ind
R3030:3038 Proof <> singleton constr
R3040:3043 Proof <> st'' var
R3015:3023 Proof <> singleton constr
R3025:3026 Proof <> st var
R2996:3001 Proof <> cwhile constr
R3011:3011 Proof <> c var
R3009:3009 Proof <> e var
R3004:3004 Coq.Init.Datatypes <> S constr
R3006:3006 Proof <> n var
R2928:2932 Proof <> ceval ind
R2966:2974 Proof <> singleton constr
R2976:2979 Proof <> st'' var
R2950:2958 Proof <> singleton constr
R2960:2962 Proof <> st' var
R2935:2940 Proof <> cwhile constr
R2946:2946 Proof <> c var
R2944:2944 Proof <> e var
R2942:2942 Proof <> n var
R2882:2886 Proof <> ceval ind
R2906:2914 Proof <> singleton constr
R2916:2918 Proof <> st' var
R2891:2899 Proof <> singleton constr
R2901:2902 Proof <> st var
R2888:2888 Proof <> c var
R2867:2869 Coq.Init.Logic <> :type_scope:x_'='_x not
R2857:2861 Proof <> beval def
R2866:2866 Proof <> e var
R2863:2864 Proof <> st var
R2870:2873 Coq.Init.Datatypes <> true constr
R3099:3106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3107:3111 Proof <> ceval ind
R3144:3152 Proof <> singleton constr
R3154:3155 Proof <> st var
R3129:3137 Proof <> singleton constr
R3139:3140 Proof <> st var
R3114:3119 Proof <> cwhile constr
R3125:3125 Proof <> c var
R3123:3123 Proof <> e var
R3091:3093 Coq.Init.Logic <> :type_scope:x_'='_x not
R3081:3085 Proof <> beval def
R3090:3090 Proof <> e var
R3087:3088 Proof <> st var
R3094:3098 Coq.Init.Datatypes <> false constr
R3212:3219 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3237:3244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3245:3249 Proof <> ceval ind
R3267:3270 Proof <> st'' var
R3264:3265 Proof <> st var
R3252:3255 Proof <> cseq constr
R3260:3261 Proof <> c2 var
R3257:3258 Proof <> c1 var
R3220:3224 Proof <> ceval ind
R3233:3236 Proof <> st'' var
R3229:3231 Proof <> st' var
R3226:3227 Proof <> c2 var
R3197:3201 Proof <> ceval ind
R3209:3211 Proof <> st' var
R3206:3207 Proof <> st var
R3203:3204 Proof <> c1 var
R3335:3342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3360:3367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3368:3372 Proof <> ceval ind
R3409:3417 Proof <> composite constr
R3424:3427 Proof <> st2' var
R3419:3422 Proof <> st1' var
R3389:3397 Proof <> composite constr
R3403:3405 Proof <> st2 var
R3399:3401 Proof <> st1 var
R3375:3379 Proof <> cprod constr
R3384:3385 Proof <> c2 var
R3381:3382 Proof <> c1 var
R3343:3347 Proof <> ceval ind
R3356:3359 Proof <> st2' var
R3352:3354 Proof <> st2 var
R3349:3350 Proof <> c2 var
R3318:3322 Proof <> ceval ind
R3331:3334 Proof <> st1' var
R3327:3329 Proof <> st1 var
R3324:3325 Proof <> c1 var
R3449:3453 Proof <> ceval ind
def 3468:3476 <> Assertion
R3486:3489 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3481:3485 Proof <> state ind
def 3507:3520 <> assert_implies
R3529:3537 Proof <> Assertion def
R3567:3570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3571:3571 Proof <> Q var
R3573:3574 Proof <> st var
R3563:3563 Proof <> P var
R3565:3566 Proof <> st var
def 3589:3596 <> assn_sub
R3606:3614 Proof <> Assertion def
R3631:3635 Proof <> state ind
R3647:3648 Proof <> st var
R3659:3667 Proof <> singleton constr
R3674:3674 Proof <> P var
R3677:3685 Proof <> singleton constr
R3688:3695 Proof <> stupdate def
R3700:3704 Proof <> aeval def
R3708:3708 Proof <> e var
R3697:3697 Proof <> x var
R3719:3727 Proof <> composite constr
R3736:3740 Coq.Init.Logic <> False ind
def 3761:3766 <> triple
R3771:3779 Proof <> Assertion def
R3785:3787 Proof <> com ind
R3793:3801 Proof <> Assertion def
R3845:3848 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3853:3856 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3857:3857 Proof <> Q var
R3859:3861 Proof <> st' var
R3849:3849 Proof <> P var
R3851:3852 Proof <> st var
R3831:3835 Proof <> ceval ind
R3842:3844 Proof <> st' var
R3839:3840 Proof <> st var
R3837:3837 Proof <> c var
R3898:3903 Proof <> triple def
not 3874:3874 <> ::'{{'_x_'}}'_x_'{{'_x_'}}'
def 3956:3960 <> bassn
R3966:3974 Proof <> Assertion def
R3997:3998 Proof <> st var
R4019:4027 Proof <> singleton constr
R4044:4046 Coq.Init.Logic <> :type_scope:x_'='_x not
R4035:4039 Proof <> beval def
R4043:4043 Proof <> b var
R4047:4050 Coq.Init.Datatypes <> true constr
R4067:4075 Proof <> composite constr
R4084:4088 Coq.Init.Logic <> False ind
prf 4116:4119 <> skip
R4133:4134 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4136:4138 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4144:4146 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4148:4149 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4135:4135 Proof <> P var
R4139:4143 Proof <> cskip constr
R4147:4147 Proof <> P var
R4168:4173 Proof <> triple def
prf 4226:4237 <> while_unfold
R4319:4326 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4422:4422 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4264:4268 Proof <> ceval ind
R4305:4313 Proof <> singleton constr
R4315:4317 Proof <> st' var
R4290:4298 Proof <> singleton constr
R4300:4301 Proof <> st var
R4271:4276 Proof <> cwhile constr
R4286:4286 Proof <> c var
R4284:4284 Proof <> e var
R4279:4279 Coq.Init.Datatypes <> S constr
R4281:4281 Proof <> n var
R4401:4404 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4327:4331 Proof <> ceval ind
R4387:4395 Proof <> singleton constr
R4397:4399 Proof <> st' var
R4372:4380 Proof <> singleton constr
R4382:4383 Proof <> st var
R4334:4337 Proof <> cseq constr
R4356:4361 Proof <> cwhile constr
R4367:4367 Proof <> c var
R4365:4365 Proof <> e var
R4363:4363 Proof <> n var
R4340:4342 Proof <> cif constr
R4348:4352 Proof <> cskip constr
R4346:4346 Proof <> c var
R4344:4344 Proof <> e var
R4415:4417 Coq.Init.Logic <> :type_scope:x_'='_x not
R4405:4409 Proof <> beval def
R4414:4414 Proof <> e var
R4411:4412 Proof <> st var
R4418:4421 Coq.Init.Datatypes <> true constr
R4530:4536 Proof <> EIfTrue constr
R4530:4536 Proof <> EIfTrue constr
R4678:4687 Proof <> EWhileTrue constr
R4678:4687 Proof <> EWhileTrue constr
R4714:4723 Proof <> EWhileTrue constr
R4714:4723 Proof <> EWhileTrue constr
ax 4768:4772 <> while
R4795:4795 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4877:4883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4884:4885 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4887:4889 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4907:4909 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4911:4912 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4886:4886 Proof <> P var
R4890:4895 Proof <> cwhile constr
R4905:4906 Proof <> c0 var
R4903:4903 Proof <> e var
R4898:4898 Coq.Init.Datatypes <> S constr
R4900:4900 Proof <> n var
R4910:4910 Proof <> P var
R4821:4827 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4828:4829 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4831:4833 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4871:4873 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4875:4876 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4830:4830 Proof <> P var
R4834:4837 Proof <> cseq constr
R4857:4862 Proof <> cwhile constr
R4868:4869 Proof <> c0 var
R4866:4866 Proof <> e var
R4864:4864 Proof <> n var
R4840:4842 Proof <> cif constr
R4849:4853 Proof <> cskip constr
R4846:4847 Proof <> c0 var
R4844:4844 Proof <> e var
R4874:4874 Proof <> P var
R4796:4797 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4799:4801 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4815:4817 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4819:4820 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R4798:4798 Proof <> P var
R4802:4807 Proof <> cwhile constr
R4813:4814 Proof <> c0 var
R4811:4811 Proof <> e var
R4809:4809 Proof <> n var
R4818:4818 Proof <> P var
prf 4924:4934 <> consequence
R4979:4984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5004:5009 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5025:5030 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5031:5032 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5034:5036 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5038:5040 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5042:5043 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5033:5033 Proof <> P var
R5037:5037 Proof <> c var
R5041:5041 Proof <> Q var
R5010:5011 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5014:5016 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5018:5020 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5023:5024 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5012:5013 Proof <> P' var
R5017:5017 Proof <> c var
R5021:5022 Proof <> Q' var
R4985:4998 Proof <> assert_implies def
R5003:5003 Proof <> Q var
R5000:5001 Proof <> Q' var
R4960:4973 Proof <> assert_implies def
R4977:4978 Proof <> P' var
R4975:4975 Proof <> P var
R5060:5065 Proof <> triple def
R5068:5081 Proof <> assert_implies def
prf 5105:5110 <> assign
R5130:5132 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5147:5150 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5162:5164 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5166:5167 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5133:5140 Proof <> assn_sub def
R5146:5146 Proof <> P var
R5144:5144 Proof <> e var
R5142:5142 Proof <> x var
R5151:5157 Proof <> cassign constr
R5161:5161 Proof <> e var
R5159:5159 Proof <> x var
R5165:5165 Proof <> P var
R5186:5191 Proof <> triple def
def 5245:5249 <> first
R5254:5262 Proof <> Assertion def
R5273:5276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5268:5272 Proof <> state ind
R5285:5293 Proof <> Assertion def
R5316:5317 Proof <> st var
R5328:5336 Proof <> composite constr
R5353:5356 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5349:5349 Proof <> P var
R5351:5352 Proof <> st var
R5357:5357 Proof <> f var
R5372:5376 Coq.Init.Logic <> False ind
prf 5394:5401 <> hoare_if
R5482:5487 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5543:5548 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5549:5550 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5552:5554 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5577:5579 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5581:5582 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5551:5551 Proof <> P var
R5555:5559 Proof <> cprod constr
R5575:5576 Proof <> c2 var
R5562:5564 Proof <> cif constr
R5571:5572 Proof <> c1 var
R5568:5569 Proof <> c0 var
R5566:5566 Proof <> e var
R5580:5580 Proof <> Q var
R5488:5489 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5523:5525 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5537:5539 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5541:5542 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5490:5494 Proof <> first def
R5509:5510 Coq.Init.Logic <> :type_scope:'~'_x not
R5521:5521 Coq.Init.Logic <> :type_scope:'~'_x not
R5511:5515 Proof <> bassn def
R5519:5520 Proof <> st var
R5517:5517 Proof <> e var
R5496:5496 Proof <> P var
R5526:5530 Proof <> cprod constr
R5535:5536 Proof <> c2 var
R5532:5533 Proof <> c1 var
R5540:5540 Proof <> Q var
R5430:5431 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5462:5464 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5476:5478 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5480:5481 Proof <> ::'{{'_x_'}}'_x_'{{'_x_'}}' not
R5432:5436 Proof <> first def
R5451:5455 Proof <> bassn def
R5459:5460 Proof <> st var
R5457:5457 Proof <> e var
R5438:5438 Proof <> P var
R5465:5469 Proof <> cprod constr
R5474:5475 Proof <> c2 var
R5471:5472 Proof <> c0 var
R5479:5479 Proof <> Q var
R5601:5606 Proof <> triple def
ind 5795:5803 <> partition
constr 5838:5842 <> PartL
constr 5946:5950 <> PartR
constr 6054:6057 <> PSeq
constr 6110:6115 <> PSkipL
constr 6151:6156 <> PSkipR
R5810:5813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5817:5820 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5824:5827 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5821:5823 Proof <> com ind
R5814:5816 Proof <> com ind
R5807:5809 Proof <> com ind
R5894:5901 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5902:5910 Proof <> partition ind
R5932:5935 Proof <> cseq constr
R5940:5941 Proof <> c1 var
R5937:5938 Proof <> c0 var
R5917:5920 Proof <> cseq constr
R5927:5928 Proof <> c1 var
R5922:5925 Proof <> c0'' var
R5912:5914 Proof <> c0' var
R5873:5881 Proof <> partition ind
R5892:5893 Proof <> c0 var
R5887:5890 Proof <> c0'' var
R5883:5885 Proof <> c0' var
R6002:6009 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6010:6018 Proof <> partition ind
R6040:6043 Proof <> cseq constr
R6048:6049 Proof <> c1 var
R6045:6046 Proof <> c0 var
R6034:6037 Proof <> c1'' var
R6021:6024 Proof <> cseq constr
R6029:6031 Proof <> c1' var
R6026:6027 Proof <> c0 var
R5981:5989 Proof <> partition ind
R6000:6001 Proof <> c1 var
R5995:5998 Proof <> c1'' var
R5991:5993 Proof <> c1' var
R6079:6087 Proof <> partition ind
R6096:6099 Proof <> cseq constr
R6104:6105 Proof <> c1 var
R6101:6102 Proof <> c0 var
R6092:6093 Proof <> c1 var
R6089:6090 Proof <> c0 var
R6129:6137 Proof <> partition ind
R6147:6147 Proof <> c var
R6145:6145 Proof <> c var
R6139:6143 Proof <> cskip constr
R6170:6178 Proof <> partition ind
R6188:6188 Proof <> c var
R6182:6186 Proof <> cskip constr
R6180:6180 Proof <> c var
prf 6198:6205 <> seqassoc
R6276:6282 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6238:6242 Proof <> ceval ind
R6273:6275 Proof <> st' var
R6270:6271 Proof <> st var
R6245:6248 Proof <> cseq constr
R6254:6257 Proof <> cseq constr
R6263:6266 Proof <> c0'' var
R6259:6261 Proof <> c0' var
R6250:6251 Proof <> c0 var
R6283:6287 Proof <> ceval ind
R6318:6320 Proof <> st' var
R6315:6316 Proof <> st var
R6290:6293 Proof <> cseq constr
R6309:6312 Proof <> c0'' var
R6296:6299 Proof <> cseq constr
R6304:6306 Proof <> c0' var
R6301:6302 Proof <> c0 var
R6403:6406 Proof <> ESeq constr
R6403:6406 Proof <> ESeq constr
R6416:6419 Proof <> ESeq constr
R6416:6419 Proof <> ESeq constr
R6490:6493 Proof <> ESeq constr
R6490:6493 Proof <> ESeq constr
R6513:6516 Proof <> ESeq constr
R6513:6516 Proof <> ESeq constr
prf 6553:6562 <> partdeterm
R6610:6615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6631:6635 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6616:6620 Proof <> ceval ind
R6628:6630 Proof <> st' var
R6625:6626 Proof <> st var
R6622:6623 Proof <> c0 var
R6636:6640 Proof <> ceval ind
R6658:6660 Proof <> st' var
R6655:6656 Proof <> st var
R6643:6646 Proof <> cseq constr
R6651:6652 Proof <> c2 var
R6648:6649 Proof <> c1 var
R6592:6600 Proof <> partition ind
R6608:6609 Proof <> c0 var
R6605:6606 Proof <> c2 var
R6602:6603 Proof <> c1 var
R6778:6785 Proof <> seqassoc thm
R6778:6785 Proof <> seqassoc thm
R6778:6785 Proof <> seqassoc thm
R6778:6785 Proof <> seqassoc thm
R6778:6785 Proof <> seqassoc thm
R6778:6785 Proof <> seqassoc thm
R6778:6785 Proof <> seqassoc thm
R6943:6950 Proof <> seqassoc thm
R6943:6950 Proof <> seqassoc thm
R6943:6950 Proof <> seqassoc thm
R7198:7201 Proof <> ESeq constr
R7198:7201 Proof <> ESeq constr
R7219:7223 Proof <> ESkip constr
R7219:7223 Proof <> ESkip constr
def 7302:7309 <> pairwise
R7314:7322 Proof <> Assertion def
R7328:7336 Proof <> Assertion def
R7341:7349 Proof <> Assertion def
R7372:7373 Proof <> st var
R7394:7402 Proof <> singleton constr
R7410:7414 Coq.Init.Logic <> False ind
R7430:7438 Proof <> composite constr
R7456:7459 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7451:7451 Proof <> P var
R7460:7460 Proof <> Q var
prf 8772:8780 <> splitting
R8810:8813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8815:8818 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8814:8814 Proof <> A var
R8809:8809 Proof <> A var
R8828:8828 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8859:8864 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8850:8853 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8845:8845 Proof <> P var
R8849:8849 Proof <> b var
R8847:8847 Proof <> a var
R8854:8854 Proof <> Q var
R8858:8858 Proof <> d var
R8856:8856 Proof <> c var
R8865:8865 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8883:8888 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8906:8906 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8878:8878 Proof <> P var
R8882:8882 Proof <> b var
R8880:8880 Proof <> a var
R8901:8901 Proof <> Q var
R8905:8905 Proof <> d var
R8903:8903 Proof <> c var
